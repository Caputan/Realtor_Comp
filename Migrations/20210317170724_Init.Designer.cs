// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RieltorComp.Data;

namespace RieltorComp.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20210317170724_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.4");

            modelBuilder.Entity("RieltorComp.Models.Clients", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FIO")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Passport")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("RieltorComp.Models.Contracts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Client_FIO")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Client_Passport")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Rielter_FIO")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Service_Done")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Service_Price")
                        .HasColumnType("REAL");

                    b.Property<int?>("ServicesService_Name")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ServicesService_Name");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("RieltorComp.Models.Loans", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Loan_Adress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Loan_Date")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Loan_Period")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Loan_Price")
                        .HasColumnType("REAL");

                    b.Property<int?>("PropertiesAdress")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PropertiesAdress");

                    b.ToTable("Loans");
                });

            modelBuilder.Entity("RieltorComp.Models.Properties", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Living_Area")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Number_Of_Rooms")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Owner_FIO")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Owner_Passport")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ServiceId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ServiceId");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("RieltorComp.Models.Rents", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PropertiesAdress")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Rent_Adress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Rent_Payment")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Rent_Period")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PropertiesAdress");

                    b.ToTable("Rents");
                });

            modelBuilder.Entity("RieltorComp.Models.Sells", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PropertiesAdress")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Sell_Adress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Sell_Date")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Sell_Price")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("PropertiesAdress");

                    b.ToTable("Sells");
                });

            modelBuilder.Entity("RieltorComp.Models.Services", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Service_Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("RieltorComp.Models.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RieltorComp.Models.Contracts", b =>
                {
                    b.HasOne("RieltorComp.Models.Services", "Service")
                        .WithMany()
                        .HasForeignKey("ServicesService_Name");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("RieltorComp.Models.Loans", b =>
                {
                    b.HasOne("RieltorComp.Models.Properties", "Property")
                        .WithMany()
                        .HasForeignKey("PropertiesAdress");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("RieltorComp.Models.Properties", b =>
                {
                    b.HasOne("RieltorComp.Models.Services", "Service")
                        .WithMany()
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Service");
                });

            modelBuilder.Entity("RieltorComp.Models.Rents", b =>
                {
                    b.HasOne("RieltorComp.Models.Properties", "Property")
                        .WithMany()
                        .HasForeignKey("PropertiesAdress");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("RieltorComp.Models.Sells", b =>
                {
                    b.HasOne("RieltorComp.Models.Properties", "Property")
                        .WithMany()
                        .HasForeignKey("PropertiesAdress");

                    b.Navigation("Property");
                });
#pragma warning restore 612, 618
        }
    }
}
